---
import { languages, type Language } from '../i18n/translations';

export interface Props {
  currentLang: Language;
}

const { currentLang } = Astro.props;
---

<div class="language-selector">
  <button class="lang-toggle" type="button" onclick="toggleLanguageDropdown(this)">
    <span class="current-lang">{languages[currentLang]}</span>
    <span class="dropdown-arrow">â–¼</span>
  </button>
  <div class="lang-dropdown">
    {Object.entries(languages).map(([code, name]) => (
      <a 
        href={code === 'es' ? '/' : `/${code}/`}
        class={`lang-option ${code === currentLang ? 'active' : ''}`}
      >
        {name}
      </a>
    ))}
  </div>
</div>

<script is:inline>
  window.toggleLanguageDropdown = function(button) {
    console.log('ðŸ”„ Toggle clicked!');
    const selector = button.closest('.language-selector');
    const dropdown = selector.querySelector('.lang-dropdown');
    
    // Close all other dropdowns
    document.querySelectorAll('.language-selector').forEach(function(otherSelector) {
      if (otherSelector !== selector) {
        const otherDropdown = otherSelector.querySelector('.lang-dropdown');
        otherDropdown.style.display = 'none';
      }
    });
    
    // Toggle current dropdown
    if (dropdown.style.display === 'block') {
      dropdown.style.display = 'none';
      console.log('ðŸ”’ Closed');
    } else {
      dropdown.style.display = 'block';
      console.log('ðŸ”“ Opened');
    }
  };
  
  // Close when clicking outside
  document.addEventListener('click', function(e) {
    if (!e.target.closest('.language-selector')) {
      document.querySelectorAll('.lang-dropdown').forEach(function(dropdown) {
        dropdown.style.display = 'none';
      });
    }
  });
  
  console.log('âœ… Language selector ready');
</script>

<style>
  .language-selector {
    position: relative;
    display: inline-block;
  }

  .lang-toggle {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background: white;
    border: 1px solid #ddd;
    border-radius: 6px;
    cursor: pointer;
    font-size: 0.9rem;
    color: #333;
    min-width: 120px;
  }

  .lang-toggle:hover {
    background: #f5f5f5;
    border-color: #007acc;
  }

  .lang-dropdown {
    position: absolute;
    top: calc(100% + 0.5rem);
    right: 0;
    background: white;
    border: 1px solid #ddd;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    min-width: 120px;
    z-index: 9999;
    display: none;
  }

  .lang-option {
    display: block;
    padding: 0.75rem 1rem;
    color: #333;
    text-decoration: none;
    font-size: 0.9rem;
    border-bottom: 1px solid #f0f0f0;
  }

  .lang-option:last-child {
    border-bottom: none;
  }

  .lang-option:hover {
    background: #f5f5f5;
  }

  .lang-option.active {
    background: #007acc;
    color: white;
    font-weight: 600;
  }

  @media (max-width: 768px) {
    .lang-toggle {
      padding: 0.4rem 0.8rem;
      font-size: 0.8rem;
      min-width: 100px;
    }
    
    .lang-dropdown {
      right: -1rem;
      min-width: 100px;
    }
  }
</style>

